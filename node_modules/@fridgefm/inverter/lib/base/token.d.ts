import type { Token } from './token.types';
/**
 * Method for creating tokens that get bound to providers later
 * @param description string literal describing your tokeen purpose
 */
export declare const createToken: <T>(description: string) => Token<T>;
/**
 * Set of token modifier functions
 */
export declare const modifyToken: {
    /**
     * Modifier for providing value that will be used as default if not provided
     */
    readonly optionalValue: <T, A extends Token<T>>(token: A, value: T) => A & {
        optionalValue: T;
    };
    /**
     * Modifier for making a token multiple - that means that they dont
     * shadow each other but instead are passed as an array
     */
    readonly multi: <A_1 extends Token<any>>(token: A_1) => A_1 & {
        multi: true;
    };
};
