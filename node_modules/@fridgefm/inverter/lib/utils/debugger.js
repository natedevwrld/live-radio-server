"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.debugContainer = void 0;
/* eslint-disable no-console */
const container_declaration_1 = require("../module/container-declaration");
/**
 * This is a basic wrapper to debug the resolving process of your cointainer
 */
const debugContainer = (containerCfg) => {
    const timings = { containerStart: 0, containerReady: 0 };
    const container = (0, container_declaration_1.declareContainer)(Object.assign(Object.assign({}, containerCfg), { events: {
            providerResolveEnd: (provider) => {
                var _a, _b;
                console.log('Token resolved', {
                    desc: provider.provide.symbol.description,
                    type: provider.useFactory ? 'factory' : 'value',
                });
                (_b = (_a = containerCfg.events) === null || _a === void 0 ? void 0 : _a.providerResolveEnd) === null || _b === void 0 ? void 0 : _b.call(_a, provider);
            },
            providerRegistered: (provider) => {
                var _a, _b;
                console.log('Provider registered', {
                    desc: provider.provide.symbol.description,
                    type: provider.useFactory ? 'factory' : 'value',
                });
                (_b = (_a = containerCfg.events) === null || _a === void 0 ? void 0 : _a.providerRegistered) === null || _b === void 0 ? void 0 : _b.call(_a, provider);
            },
            moduleRegistered: (mod, parent) => {
                var _a, _b;
                console.log('Module Registered', { desc: mod.__internals.name, parent });
                (_b = (_a = containerCfg.events) === null || _a === void 0 ? void 0 : _a.moduleRegistered) === null || _b === void 0 ? void 0 : _b.call(_a, mod, parent);
            },
            containerReady: () => {
                var _a, _b;
                timings.containerReady = Date.now();
                const durationMs = timings.containerReady - timings.containerStart;
                console.log(`Container is ready in ${durationMs}ms`);
                (_b = (_a = containerCfg.events) === null || _a === void 0 ? void 0 : _a.containerReady) === null || _b === void 0 ? void 0 : _b.call(_a);
            },
            containerStart: () => {
                timings.containerStart = Date.now();
            },
        } }));
    return { container };
};
exports.debugContainer = debugContainer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVidWdnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvZGVidWdnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0JBQStCO0FBQy9CLDJFQUFtRTtBQUtuRTs7R0FFRztBQUNJLE1BQU0sY0FBYyxHQUFHLENBQUMsWUFBb0MsRUFBRSxFQUFFO0lBQ3JFLE1BQU0sT0FBTyxHQUFHLEVBQUUsY0FBYyxFQUFFLENBQUMsRUFBRSxjQUFjLEVBQUUsQ0FBQyxFQUFFLENBQUM7SUFDekQsTUFBTSxTQUFTLEdBQUcsSUFBQSx3Q0FBZ0Isa0NBQzdCLFlBQVksS0FDZixNQUFNLEVBQUU7WUFDTixrQkFBa0IsRUFBRSxDQUFDLFFBQStCLEVBQUUsRUFBRTs7Z0JBQ3RELE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUU7b0JBQzVCLElBQUksRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXO29CQUN6QyxJQUFJLEVBQUUsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxPQUFPO2lCQUNoRCxDQUFDLENBQUM7Z0JBQ0gsTUFBQSxNQUFBLFlBQVksQ0FBQyxNQUFNLDBDQUFFLGtCQUFrQixtREFBRyxRQUFRLENBQUMsQ0FBQztZQUN0RCxDQUFDO1lBQ0Qsa0JBQWtCLEVBQUUsQ0FBQyxRQUErQixFQUFFLEVBQUU7O2dCQUN0RCxPQUFPLENBQUMsR0FBRyxDQUFDLHFCQUFxQixFQUFFO29CQUNqQyxJQUFJLEVBQUUsUUFBUSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsV0FBVztvQkFDekMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTztpQkFDaEQsQ0FBQyxDQUFDO2dCQUNILE1BQUEsTUFBQSxZQUFZLENBQUMsTUFBTSwwQ0FBRSxrQkFBa0IsbURBQUcsUUFBUSxDQUFDLENBQUM7WUFDdEQsQ0FBQztZQUNELGdCQUFnQixFQUFFLENBQUMsR0FBc0IsRUFBRSxNQUFjLEVBQUUsRUFBRTs7Z0JBQzNELE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsRUFBRSxJQUFJLEVBQUUsR0FBRyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDekUsTUFBQSxNQUFBLFlBQVksQ0FBQyxNQUFNLDBDQUFFLGdCQUFnQixtREFBRyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDdkQsQ0FBQztZQUNELGNBQWMsRUFBRSxHQUFHLEVBQUU7O2dCQUNuQixPQUFPLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztnQkFDcEMsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGNBQWMsR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDO2dCQUNuRSxPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixVQUFVLElBQUksQ0FBQyxDQUFDO2dCQUNyRCxNQUFBLE1BQUEsWUFBWSxDQUFDLE1BQU0sMENBQUUsY0FBYyxrREFBSSxDQUFDO1lBQzFDLENBQUM7WUFDRCxjQUFjLEVBQUUsR0FBRyxFQUFFO2dCQUNuQixPQUFPLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUN0QyxDQUFDO1NBQ0YsSUFDRCxDQUFDO0lBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQXBDVyxRQUFBLGNBQWMsa0JBb0N6QiJ9