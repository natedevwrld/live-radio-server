"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stationProvider = exports.STATION_PUBLIC_TOKEN = void 0;
const inverter_1 = require("@fridgefm/inverter");
const time_1 = require("../../utils/time");
const playlist_provider_1 = require("../playlist/playlist.provider");
const queuestream_provider_1 = require("../queuestream/queuestream.provider");
const events_provider_1 = require("../events/events.provider");
const tokens_1 = require("../tokens");
exports.STATION_PUBLIC_TOKEN = (0, inverter_1.createToken)('station_root');
exports.stationProvider = (0, inverter_1.injectable)({
    provide: exports.STATION_PUBLIC_TOKEN,
    useFactory: (config, queuestream, eventBus, playlist) => {
        const station = {
            start() {
                const ct = (0, time_1.captureTime)();
                if (this.getPlaylist().length) {
                    queuestream.next();
                }
                eventBus.emit(events_provider_1.PUBLIC_EVENTS.START, this.getPlaylist(), ct());
            },
            getPlaylist: () => playlist.getList(),
            addFolder: (folder) => playlist.addFolder(folder),
            next: () => queuestream.next(),
            connectListener(_, res, cb = () => { }) {
                const { currentPipe, getPrebuffer } = queuestream;
                res.writeHead(200, config.responseHeaders);
                res.write(getPrebuffer());
                currentPipe(res);
                cb();
            },
            reorderPlaylist: (cb) => playlist.reorder(cb),
            on: (...args) => eventBus.on(...args),
        };
        return station;
    },
    inject: [tokens_1.CONFIG_TOKEN, queuestream_provider_1.QUEUESTREAM_TOKEN, events_provider_1.EVENT_BUS_TOKEN, playlist_provider_1.PLAYLIST_TOKEN],
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGlvbi5wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvc3RhdGlvbi9zdGF0aW9uLnByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGlEQUE2RDtBQUM3RCwyQ0FBK0M7QUFDL0MscUVBQStEO0FBQy9ELDhFQUF3RTtBQUN4RSwrREFBMkU7QUFDM0Usc0NBQXlDO0FBTzVCLFFBQUEsb0JBQW9CLEdBQUcsSUFBQSxzQkFBVyxFQUFXLGNBQWMsQ0FBQyxDQUFDO0FBRTdELFFBQUEsZUFBZSxHQUFHLElBQUEscUJBQVUsRUFBQztJQUN4QyxPQUFPLEVBQUUsNEJBQW9CO0lBQzdCLFVBQVUsRUFBRSxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxFQUFFO1FBQ3RELE1BQU0sT0FBTyxHQUFHO1lBQ2QsS0FBSztnQkFDSCxNQUFNLEVBQUUsR0FBRyxJQUFBLGtCQUFXLEdBQUUsQ0FBQztnQkFFekIsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsTUFBTSxFQUFFO29CQUM3QixXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7aUJBQ3BCO2dCQUVELFFBQVEsQ0FBQyxJQUFJLENBQUMsK0JBQWEsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDL0QsQ0FBQztZQUNELFdBQVcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFO1lBQ3JDLFNBQVMsRUFBRSxDQUFDLE1BQWMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7WUFDekQsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUU7WUFDOUIsZUFBZSxDQUFDLENBQWdCLEVBQUUsR0FBbUIsRUFBRSxFQUFFLEdBQUcsR0FBRyxFQUFFLEdBQUUsQ0FBQztnQkFDbEUsTUFBTSxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUUsR0FBRyxXQUFXLENBQUM7Z0JBRWxELEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQztnQkFDM0MsR0FBRyxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO2dCQUMxQixXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ2pCLEVBQUUsRUFBRSxDQUFDO1lBQ1AsQ0FBQztZQUNELGVBQWUsRUFBRSxDQUFDLEVBQWEsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDeEQsRUFBRSxFQUFFLENBQUMsR0FBRyxJQUFnQyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDO1NBQ2xFLENBQUM7UUFFRixPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDO0lBQ0QsTUFBTSxFQUFFLENBQUMscUJBQVksRUFBRSx3Q0FBaUIsRUFBRSxpQ0FBZSxFQUFFLGtDQUFjLENBQVU7Q0FDcEYsQ0FBQyxDQUFDIn0=