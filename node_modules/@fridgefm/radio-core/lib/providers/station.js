"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Station = void 0;
const inverter_1 = require("@fridgefm/inverter");
const config_1 = require("./config");
const events_provider_1 = require("./events/events.provider");
const playlist_provider_1 = require("./playlist/playlist.provider");
const queuestream_provider_1 = require("./queuestream/queuestream.provider");
const prebuffer_provider_1 = require("./prebuffer/prebuffer.provider");
const track_provider_1 = require("./track/track.provider");
const station_provider_1 = require("./station/station.provider");
const tokens_1 = require("./tokens");
class Station {
    constructor(extConfig) {
        this.on = (...args) => this._station.on(...args);
        this._station = (0, inverter_1.declareContainer)({
            providers: [
                (0, inverter_1.injectable)({
                    provide: tokens_1.CONFIG_TOKEN,
                    useValue: (0, config_1.createConfig)(extConfig || {}),
                }),
                track_provider_1.trackProvider,
                events_provider_1.eventBusProvider,
                playlist_provider_1.playlistProvider,
                prebuffer_provider_1.prebufferProvider,
                queuestream_provider_1.queuestreamProvider,
                station_provider_1.stationProvider,
            ],
        }).get(station_provider_1.STATION_PUBLIC_TOKEN);
    }
    start() {
        this._station.start();
    }
    addFolder(folder) {
        this._station.addFolder(folder);
    }
    next() {
        this._station.next();
    }
    getPlaylist() {
        return this._station.getPlaylist();
    }
    reorderPlaylist(cb) {
        return this._station.reorderPlaylist(cb);
    }
    connectListener(req, res, cb = () => { }) {
        this._station.connectListener(req, res, cb);
    }
}
exports.Station = Station;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wcm92aWRlcnMvc3RhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpREFBa0U7QUFDbEUscUNBQWdEO0FBQ2hELDhEQUE0RDtBQUM1RCxvRUFBZ0U7QUFDaEUsNkVBQXlFO0FBQ3pFLHVFQUFtRTtBQUNuRSwyREFBdUQ7QUFDdkQsaUVBQW1GO0FBQ25GLHFDQUF3QztBQU94QyxNQUFhLE9BQU87SUFHbEIsWUFBWSxTQUEyQjtRQXlDaEMsT0FBRSxHQUFtQixDQUFDLEdBQUcsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBeENqRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUEsMkJBQWdCLEVBQUM7WUFDL0IsU0FBUyxFQUFFO2dCQUNULElBQUEscUJBQVUsRUFBQztvQkFDVCxPQUFPLEVBQUUscUJBQVk7b0JBQ3JCLFFBQVEsRUFBRSxJQUFBLHFCQUFZLEVBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQztpQkFDeEMsQ0FBQztnQkFDRiw4QkFBYTtnQkFDYixrQ0FBZ0I7Z0JBQ2hCLG9DQUFnQjtnQkFDaEIsc0NBQWlCO2dCQUNqQiwwQ0FBbUI7Z0JBQ25CLGtDQUFlO2FBQ2hCO1NBQ0YsQ0FBQyxDQUFDLEdBQUcsQ0FBQyx1Q0FBb0IsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFTSxLQUFLO1FBQ1YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRU0sU0FBUyxDQUFDLE1BQWM7UUFDN0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLElBQUk7UUFDVCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxXQUFXO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRU0sZUFBZSxDQUFDLEVBQWE7UUFDbEMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRU0sZUFBZSxDQUFDLEdBQWtCLEVBQUUsR0FBbUIsRUFBRSxFQUFFLEdBQUcsR0FBRyxFQUFFLEdBQUUsQ0FBQztRQUMzRSxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Q0FHRjtBQTdDRCwwQkE2Q0MifQ==