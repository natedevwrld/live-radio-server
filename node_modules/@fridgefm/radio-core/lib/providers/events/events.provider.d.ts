import type { TEmitter } from './events.types';
import type { Config } from '../config';
export declare const EVENT_BUS_TOKEN: import("@fridgefm/inverter/lib/base/token.types").Token<Pick<TEmitter, "emit" | "on">>;
export declare const PUBLIC_EVENTS: {
    readonly ERROR: "error";
    readonly INFO: "einfo";
    readonly START: "estart";
    readonly RESTART: "erestart";
    readonly NEXT_TRACK: "enexttrack";
};
export declare const eventBusFactory: (config: Config) => Pick<TEmitter, "emit" | "on">;
export declare const eventBusProvider: import("@fridgefm/inverter/lib/module/provider.types").InjectableDeclaration<import("@fridgefm/inverter/lib/base/token.types").Token<Pick<TEmitter, "emit" | "on">>, readonly [import("@fridgefm/inverter/lib/base/token.types").Token<Config>]>;
